{
  "name": "jasmine-rsvp",
  "description": "Jasmine helpers for testing RSVP-Promise driven code.",
  "version": "1.0.0",
  "homepage": "https://github.com/amireh/jasmine-rsvp",
  "author": {
    "name": "Ahmad Amireh",
    "email": "ahmad@algollabs.com",
    "url": "http://www.algollabs.com"
  },
  "licenses": [
    "MIT"
  ],
  "keywords": [
    "rsvp",
    "jasmine",
    "promise"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/amireh/jasmine-rsvp"
  },
  "bugs": {
    "url": "https://github.com/amireh/jasmine-rsvp/issues"
  },
  "scripts": {
    "default": "grunt",
    "test": "grunt test"
  },
  "devDependencies": {
    "shelljs": "~0.1.2",
    "glob": "x",
    "grunt": "~0.4.0",
    "grunt-contrib-watch": "0.5.x",
    "grunt-contrib-jshint": "~0.6.1",
    "grunt-contrib-connect": "0.3.0",
    "grunt-contrib-jasmine": "~0.6.5",
    "grunt-template-jasmine-requirejs": "git://github.com/amireh/grunt-template-jasmine-requirejs.git#0.2.0",
    "grunt-contrib-requirejs": "x",
    "grunt-tagrelease": "0.1.x",
    "grunt-bumpup": "0.2.x",
    "grunt-jsduck": "0.1.x",
    "lodash": "x"
  },
  "readme": "# jasmine-rsvp\n\nTurn a Jasmine suite into one suitable for testing code that produces RSVP promises. The suite tests can be written in a synchronous style which is more readable and you get to control the promise queue.\n\nRequires:\n\n    - Jasmine 2.0+\n    - RSVP\n\nExample:\n\n```javascript\ndefine(function(require) {\n  var RSVP = require('rsvp');\n\n  describe('My component', function() {\n    // Enable the jasmine-rsvp functionality for this suite:\n    this.promiseSuite = true;\n\n    it('should do something that takes a while', function() {\n      var asyncService = RSVP.defer();\n      var promise = asyncService.promise;\n      var onDone = jasmine.createSpy();\n\n      promise.then(onDone);\n\n      // Notify that our service is finished:\n      asyncService.resolve('yeah');\n\n      // Flush the promise queue, run all promise callbacks:\n      this.flush();\n\n      expect(onDone).toHaveBeenCalled();\n    });\n  });\n});\n```\n\n## Installation\n\nThe package is built as an AMD module `jasmine_rsvp` in 4 flavors:\n\n  - `dist/jasmine-rsvp.min.js` production without RSVP; expects you have RSVP locally\n  - `dist/jasmine-rsvp.js` development without RSVP\n  - `dist/jasmine-rsvp-full.min.js` production with RSVP\n  - `dist/jasmine-rsvp-full.js` development with RSVP\n\nYou can tell if the package was successfully installed by testing the `jasmine.RSVP` global:\n\n```javascript\nif (jasmine.RSVP && jasmine.RSVP.enabled) {\n  // success\n}\n```\n\n**Error logging**\n\nThe package will log all RSVP errors to the console by default. If you want to opt-out of that behavior, you can configure it:\n\n```javascript\nvar jasmineRSVP = require('jasmine_rsvp');\njasmineRSVP.logRSVPErrors = false;\n\n// or using the jasmine global:\njasmine.RSVP.logRSVPErrors = false;\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "jasmine-rsvp@1.0.0",
  "dist": {
    "shasum": "7fcd249c5ceaa264686cc5912a1c5cc1d282bbe1"
  },
  "_from": "jasmine-rsvp@>= 1.0.0",
  "_resolved": "https://registry.npmjs.org/jasmine-rsvp/-/jasmine-rsvp-1.0.0.tgz"
}
